// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeguimientoAcademico.App.Persistencia;

namespace SeguimientoAcademico.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SeguimientoAcademico.App.Dominio.Historia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<int>("IdMaestro")
                        .HasColumnType("int");

                    b.Property<string>("Tarea")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId");

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("SeguimientoAcademico.App.Dominio.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CargaHoraria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<int>("IdMaestro")
                        .HasColumnType("int");

                    b.Property<int>("IdTutor")
                        .HasColumnType("int");

                    b.Property<string>("NombreMateria")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("SeguimientoAcademico.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("SeguimientoAcademico.App.Dominio.Sugerencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HistoriaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HistoriaId");

                    b.ToTable("Sugerencias");
                });

            modelBuilder.Entity("SeguimientoAcademico.App.Dominio.Estudiante", b =>
                {
                    b.HasBaseType("SeguimientoAcademico.App.Dominio.Persona");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Latitud")
                        .HasColumnType("real");

                    b.Property<float>("Longitud")
                        .HasColumnType("real");

                    b.Property<string>("NombreFamiliar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentescoFamiliar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoFamiliar")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Estudiante");
                });

            modelBuilder.Entity("SeguimientoAcademico.App.Dominio.Maestro", b =>
                {
                    b.HasBaseType("SeguimientoAcademico.App.Dominio.Persona");

                    b.Property<string>("Especialidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenciaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Maestro");
                });

            modelBuilder.Entity("SeguimientoAcademico.App.Dominio.Tutor", b =>
                {
                    b.HasBaseType("SeguimientoAcademico.App.Dominio.Persona");

                    b.Property<string>("MateriaAsignada")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Tutor");
                });

            modelBuilder.Entity("SeguimientoAcademico.App.Dominio.Historia", b =>
                {
                    b.HasOne("SeguimientoAcademico.App.Dominio.Estudiante", null)
                        .WithMany("Historia")
                        .HasForeignKey("EstudianteId");
                });

            modelBuilder.Entity("SeguimientoAcademico.App.Dominio.Materia", b =>
                {
                    b.HasOne("SeguimientoAcademico.App.Dominio.Estudiante", null)
                        .WithMany("MateriasInscritas")
                        .HasForeignKey("EstudianteId");
                });

            modelBuilder.Entity("SeguimientoAcademico.App.Dominio.Sugerencia", b =>
                {
                    b.HasOne("SeguimientoAcademico.App.Dominio.Historia", null)
                        .WithMany("Sugerencia")
                        .HasForeignKey("HistoriaId");
                });

            modelBuilder.Entity("SeguimientoAcademico.App.Dominio.Historia", b =>
                {
                    b.Navigation("Sugerencia");
                });

            modelBuilder.Entity("SeguimientoAcademico.App.Dominio.Estudiante", b =>
                {
                    b.Navigation("Historia");

                    b.Navigation("MateriasInscritas");
                });
#pragma warning restore 612, 618
        }
    }
}
